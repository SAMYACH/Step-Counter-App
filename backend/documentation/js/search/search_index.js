var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.203,1,1.731]],["body/controllers/AppController.html",[0,1.575,1,2.267,2,1.575,3,0.507,4,0.428,5,3.063,6,0.428,7,3.063,8,0.682,9,1.95,10,4.119,11,1.575,12,0.04,13,3.063,14,1.95,15,1.575,16,2.608,17,0.035,18,0.035]],["title/modules/AppModule.html",[19,1.523,20,1.731]],["body/modules/AppModule.html",[1,1.936,2,1.345,3,0.433,4,0.365,6,0.365,12,0.039,17,0.032,18,0.032,19,1.704,20,3.347,21,1.511,22,2.234,23,2.616,24,2.616,25,2.616,26,2.645,27,2.645,28,2.645,29,2.919,30,2.227,31,2.227,32,3.206,33,3.206,34,2.616,35,2.616,36,2.227,37,3.206]],["title/injectables/AppService.html",[28,1.523,38,1.731]],["body/injectables/AppService.html",[3,0.464,4,0.391,6,0.391,8,0.625,9,1.844,10,3.954,12,0.037,14,1.442,15,1.442,16,3.053,17,0.033,18,0.033,28,1.826,36,2.386,39,2.075,40,2.803,41,3.437,42,3.437,43,1.442,44,3.437,45,3.437,46,1.619,47,3.437,48,2.075,49,3.437,50,4.396,51,3.437,52,3.437,53,3.437,54,3.437,55,3.437,56,3.437]],["title/injectables/CatagoriesService.html",[38,1.731,57,1.99]],["body/injectables/CatagoriesService.html",[3,0.279,4,0.235,6,0.499,8,0.375,9,1.294,12,0.04,14,1.839,17,0.023,18,0.023,39,1.246,48,1.246,57,1.433,58,1.683,59,2.02,60,1.683,61,3.08,62,3.083,63,2.515,64,3.692,65,2.515,66,2.515,67,2.063,68,2.141,69,2.063,70,2.063,71,1.683,72,2.066,73,1.641,74,1.163,75,1.839,76,2.063,77,2.063,78,2.444,79,1.862,80,1.638,81,2.473,82,1.91,83,1.683,84,1.538,85,1.246,86,2.229,87,1.683,88,1.683,89,1.246,90,1.683,91,1.246,92,1.683,93,1.246,94,1.683]],["title/controllers/CategoriesController.html",[0,1.203,95,1.731]],["body/controllers/CategoriesController.html",[0,0.644,2,0.644,3,0.207,4,0.175,6,0.596,8,0.279,9,1.029,11,1.604,12,0.039,14,1.604,17,0.019,18,0.019,59,1.925,61,2.462,63,2,65,2,66,2,72,1.648,73,1.432,74,0.928,75,1.467,78,2.167,79,0.926,80,0.815,81,2.112,82,1.716,83,1.252,84,1.363,85,0.926,86,1.849,89,1.48,90,1.252,91,0.926,92,1.252,93,1.48,95,0.926,96,1.252,97,1.252,98,2.452,99,1.252,100,1.252,101,2,102,1.252,103,1.252,104,1.252,105,2.452,106,3.062,107,1.534,108,2.853,109,4.049,110,1.065,111,2.498,112,3.119,113,2.655,114,3.119,115,3.119,116,3.119,117,1.252,118,1.252,119,1.252,120,0.815,121,1.252,122,1.252,123,1.252,124,1.252,125,1.252,126,1.252,127,1.252,128,2,129,1.252,130,1.252,131,2,132,2,133,1.252,134,1.252,135,1.252,136,1.252,137,1.534,138,1.252,139,2,140,1.252]],["title/entities/Category.html",[59,1.073,141,1.35]],["body/entities/Category.html",[3,0.342,4,0.288,6,0.288,8,0.46,11,2.071,12,0.042,15,1.74,17,0.027,18,0.027,59,1.688,74,1.399,82,1.339,84,1.195,120,2.204,141,1.191,142,1.756,143,2.063,144,1.5,145,2.159,146,2.917,147,3.575,148,3.575,149,4.148,150,3.88,151,3.383,152,2.529,153,2.917,154,2.917,155,2.529,156,2.917,157,2.063,158,1.756,159,2.063,160,2.917,161,2.063,162,2.063,163,2.063,164,2.529,165,1.756,166,2.063,167,2.529]],["title/classes/CategoryDTO.html",[43,1.203,78,1.523]],["body/classes/CategoryDTO.html",[3,0.402,4,0.338,6,0.455,8,0.54,11,1.894,12,0.041,15,1.894,17,0.03,18,0.03,46,1.4,59,1.69,71,3.683,73,1.112,74,1.198,78,1.579,82,1.496,84,1.336,110,2.775,120,1.579,141,1.4,144,1.676,145,2.413,146,3.26,158,2.775,168,2.424,169,2.971,170,2.971,171,2.424,172,2.424,173,2.424,174,2.971,175,1.794,176,2.424,177,2.063,178,2.424,179,3.683]],["title/interfaces/ErrnoException.html",[180,1.99,181,1.99]],["body/interfaces/ErrnoException.html",[3,0.366,4,0.309,8,0.493,12,0.039,13,2.212,15,2.334,17,0.029,18,0.029,74,1.295,75,2.275,84,1.439,144,1.575,175,2.946,181,1.883,182,2.711,183,2.212,184,2.212,185,4.306,186,4.306,187,4.306,188,4.648,189,4.648,190,4.648,191,4.648]],["title/classes/HttpExceptionFilter.html",[43,1.203,192,1.99]],["body/classes/HttpExceptionFilter.html",[3,0.464,4,0.391,6,0.391,8,0.625,9,1.844,12,0.039,14,1.442,17,0.033,18,0.033,46,1.619,72,1.619,73,1.287,74,0.912,75,1.442,192,2.386,193,2.803,194,5.11,195,4.168,196,3.437,197,3.437,198,3.437,199,4.848,200,4.396,201,3.437,202,3.437,203,3.437]],["title/classes/NotNullException.html",[43,1.203,204,1.99]],["body/classes/NotNullException.html",[3,0.507,4,0.428,6,0.428,12,0.038,17,0.035,18,0.035,46,1.769,48,2.267,72,1.769,73,1.406,75,1.575,175,2.267,184,3.063,195,3.063,204,2.608,205,3.063,206,4.649,207,4.649,208,4.649,209,3.755,210,3.755]],["title/entities/Product.html",[141,1.35,211,1.35]],["body/entities/Product.html",[3,0.339,4,0.285,6,0.511,8,0.455,11,2.17,12,0.043,15,1.731,17,0.027,18,0.027,74,1.396,82,1.33,84,1.379,141,1.18,142,1.739,144,1.49,145,2.144,150,2.043,151,2.897,153,2.043,154,2.897,156,2.043,157,2.043,159,2.043,160,2.897,161,2.043,162,2.043,163,2.043,165,1.739,166,2.897,211,1.18,212,2.043,213,2.505,214,3.551,215,2.897,216,2.897,217,2.897,218,3.551,219,2.505,220,2.505,221,2.505,222,2.043,223,2.505,224,2.505,225,2.505,226,2.505]],["title/classes/ProductDTO.html",[43,1.203,227,1.523]],["body/classes/ProductDTO.html",[3,0.343,4,0.289,6,0.543,8,0.462,11,2.075,12,0.042,15,1.895,17,0.027,18,0.027,46,1.197,73,0.951,74,1.312,82,1.343,84,1.51,120,1.35,144,1.505,145,2.166,158,2.491,171,2.073,172,2.073,173,2.073,175,1.534,176,2.073,177,1.765,178,2.073,179,2.073,211,1.69,215,3.392,216,2.927,217,2.927,227,1.35,228,2.073,229,4.158,230,4.158,231,3.588,232,3.588,233,3.588,234,3.588,235,2.491,236,2.541,237,2.541,238,2.541]],["title/controllers/ProductsController.html",[0,1.203,239,1.731]],["body/controllers/ProductsController.html",[0,0.64,2,0.64,3,0.206,4,0.174,6,0.596,8,0.277,9,1.024,11,1.6,12,0.039,14,1.6,17,0.019,18,0.019,59,0.571,61,2.455,72,1.642,73,1.427,74,0.925,75,1.462,79,0.921,80,0.811,81,2.105,82,1.713,84,1.359,85,0.921,86,1.842,89,1.473,91,0.921,93,1.473,97,1.244,99,1.244,100,1.244,101,1.991,102,1.244,103,1.244,104,1.244,108,2.844,109,4.043,110,1.059,111,2.488,112,3.11,113,2.648,114,3.11,115,3.11,116,3.11,117,1.244,118,1.244,119,1.244,120,0.811,121,1.244,122,1.244,123,1.244,124,1.244,125,1.244,126,1.244,127,1.244,128,1.991,129,1.244,130,1.244,131,1.991,132,1.991,133,1.244,134,1.244,135,1.244,136,1.244,138,1.244,139,1.991,140,1.244,211,1.437,227,2.161,235,3.53,239,0.921,240,1.244,241,2.44,242,1.991,243,2.44,244,3.05,245,2.44,246,1.525,247,1.244,248,1.525,249,1.525,250,1.525,251,1.525]],["title/modules/ProductsModule.html",[19,1.523,26,1.523]],["body/modules/ProductsModule.html",[2,1.5,3,0.483,4,0.407,6,0.407,12,0.037,16,2.484,17,0.034,18,0.034,21,2.124,22,2.396,26,2.841,29,3.131,30,2.484,31,2.484,36,2.484,239,2.159,252,2.918,253,2.918,254,2.755,255,3.577,256,3.577]],["title/injectables/ProductsService.html",[38,1.731,254,1.523]],["body/injectables/ProductsService.html",[3,0.283,4,0.239,6,0.503,8,0.381,9,1.309,12,0.04,14,1.941,17,0.024,18,0.024,39,1.265,48,1.265,60,1.71,61,3.092,68,2.166,72,2.079,73,1.652,74,1.171,75,1.852,79,1.884,80,1.658,81,2.492,82,1.917,84,1.547,85,1.265,86,1.884,87,1.71,88,1.71,89,1.265,91,1.265,93,1.265,94,1.71,211,1.47,227,2.459,235,3.609,242,2.545,247,1.71,254,1.114,257,1.71,258,3.12,259,3.727,260,3.12,261,3.12,262,2.096,263,2.096,264,2.096,265,2.096,266,2.096,267,2.096]],["title/modules/categoriesModule.html",[19,1.523,27,1.523]],["body/modules/categoriesModule.html",[2,1.723,3,0.555,4,0.468,6,0.468,12,0.037,17,0.037,18,0.037,19,2.182,21,1.935,27,2.182,59,1.537,95,2.479,268,4.107]],["title/coverage.html",[269,2.708]],["body/coverage.html",[0,1.726,1,1.505,4,0.284,5,2.034,12,0.042,17,0.027,18,0.027,28,1.325,38,2.485,40,2.034,43,1.879,57,1.731,58,2.034,59,0.933,74,0.662,78,1.325,80,1.325,95,1.505,96,2.034,141,1.667,143,2.034,168,2.034,180,1.731,181,1.731,183,2.034,192,1.731,193,2.034,204,1.731,205,2.034,211,1.175,212,2.034,222,4.397,227,1.325,228,2.034,239,1.505,240,2.034,254,1.325,257,2.034,269,1.731,270,2.493,271,2.493,272,2.493,273,4.479,274,3.539,275,2.493,276,2.493,277,4.115,278,2.493,279,2.493,280,2.493,281,2.034,282,2.034,283,2.034,284,2.493,285,2.493,286,2.493,287,2.493,288,2.493]],["title/dependencies.html",[22,1.83,289,1.957]],["body/dependencies.html",[12,0.044,17,0.032,18,0.032,22,1.673,43,1.742,290,3.149,291,3.149,292,3.149,293,3.149,294,3.149,295,4.154,296,3.149,297,4.154,298,3.149,299,3.149,300,3.149,301,3.149,302,3.149,303,3.149,304,3.149,305,3.149,306,3.149,307,3.149,308,3.149,309,3.149,310,3.149,311,3.149,312,3.149,313,3.149,314,3.149,315,3.149,316,3.149,317,3.149,318,3.149,319,3.149]],["title/miscellaneous/functions.html",[320,1.957,321,2.81]],["body/miscellaneous/functions.html",[8,0.735,12,0.037,17,0.037,18,0.037,35,3.299,281,3.299,282,3.299,283,4.255,320,3.299,321,3.299,322,4.044,323,4.044,324,4.044]],["title/index.html",[8,0.436,325,2.4,326,2.4]],["body/index.html",[6,0.285,7,2.043,12,0.042,17,0.027,18,0.027,34,2.043,68,1.739,113,1.739,269,1.739,327,2.505,328,2.505,329,3.551,330,2.505,331,2.505,332,2.505,333,2.505,334,2.505,335,4.126,336,2.505,337,2.505,338,2.505,339,5.062,340,2.505,341,2.505,342,4.922,343,2.505,344,3.551,345,2.505,346,2.505,347,2.505,348,2.505,349,3.551,350,3.551,351,2.505,352,2.505,353,2.505,354,3.551,355,3.551,356,2.505,357,2.505,358,2.505,359,2.505,360,2.505,361,2.505,362,2.043,363,2.505,364,2.505,365,2.505,366,2.505,367,2.505,368,2.505,369,2.505,370,2.505,371,2.505,372,2.505,373,2.043,374,2.505,375,2.505,376,2.505,377,2.505,378,2.505,379,2.505,380,2.043]],["title/modules.html",[21,1.837]],["body/modules.html",[12,0.036,17,0.036,18,0.036,20,2.386,21,1.862,26,2.1,27,2.1,362,3.913,381,4.797,382,4.797,383,5.164,384,3.952,385,3.952]],["title/overview.html",[386,3.182]],["body/overview.html",[2,1.313,12,0.04,17,0.031,18,0.031,20,3.292,21,1.475,22,2.198,23,2.553,24,2.553,25,2.553,26,2.724,27,2.463,28,2.463,29,2.873,30,2.174,31,2.174,39,1.89,46,1.475,142,2.174,165,2.174,177,2.174,180,2.174,252,2.553,253,2.553,254,2.463,386,2.553,387,4.634,388,3.13]],["title/properties.html",[144,1.445,289,1.957]],["body/properties.html",[6,0.464,12,0.043,17,0.037,18,0.037,144,1.709,373,3.324,380,3.324,389,4.075,390,4.075,391,4.075]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"interfaces/ErrnoException.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/categoriesModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0.0.1",{"_index":390,"title":{},"body":{"properties.html":{}}}],["0.1.0",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["0.3.7",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":165,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{},"overview.html":{}}}],["1/1",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":224,"title":{},"body":{"entities/Product.html":{}}}],["100",{"_index":222,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["2",{"_index":177,"title":{},"body":{"classes/CategoryDTO.html":{},"classes/ProductDTO.html":{},"overview.html":{}}}],["2/2",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":158,"title":{},"body":{"entities/Category.html":{},"classes/CategoryDTO.html":{},"classes/ProductDTO.html":{}}}],["3",{"_index":387,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":388,"title":{},"body":{"overview.html":{}}}],["4.5.0",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["6.1.0",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["8.8.0",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["83",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["9.0.11",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["acceptable'})@length(2",{"_index":174,"title":{},"body":{"classes/CategoryDTO.html":{}}}],["addcategory",{"_index":62,"title":{},"body":{"injectables/CatagoriesService.html":{}}}],["addcategory(categorydto",{"_index":77,"title":{},"body":{"injectables/CatagoriesService.html":{}}}],["added",{"_index":110,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CategoryDTO.html":{},"controllers/ProductsController.html":{}}}],["added_by",{"_index":152,"title":{},"body":{"entities/Category.html":{}}}],["addedby",{"_index":145,"title":{},"body":{"entities/Category.html":{},"classes/CategoryDTO.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{}}}],["addroduct",{"_index":258,"title":{},"body":{"injectables/ProductsService.html":{}}}],["addroduct(productdto",{"_index":264,"title":{},"body":{"injectables/ProductsService.html":{}}}],["again",{"_index":115,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["amazing",{"_index":363,"title":{},"body":{"index.html":{}}}],["api",{"_index":232,"title":{},"body":{"classes/ProductDTO.html":{}}}],["apicreatedresponse({status",{"_index":127,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["apinotfoundresponse({status",{"_index":131,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["apiokresponse({status",{"_index":108,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["apiproperty",{"_index":179,"title":{},"body":{"classes/CategoryDTO.html":{},"classes/ProductDTO.html":{}}}],["apiproperty()@isint",{"_index":233,"title":{},"body":{"classes/ProductDTO.html":{}}}],["apiproperty()@isnotempty({message",{"_index":169,"title":{},"body":{"classes/CategoryDTO.html":{}}}],["apiproperty()@isstring",{"_index":231,"title":{},"body":{"classes/ProductDTO.html":{}}}],["apiproperty({description",{"_index":171,"title":{},"body":{"classes/CategoryDTO.html":{},"classes/ProductDTO.html":{}}}],["app",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["applications",{"_index":334,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":20,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":28,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":200,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["async",{"_index":61,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["author",{"_index":373,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":385,"title":{},"body":{"modules.html":{}}}],["backers",{"_index":364,"title":{},"body":{"index.html":{}}}],["based",{"_index":86,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["beetween",{"_index":176,"title":{},"body":{"classes/CategoryDTO.html":{},"classes/ProductDTO.html":{}}}],["bootstarp",{"_index":323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":283,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":383,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":381,"title":{},"body":{"modules.html":{}}}],["building",{"_index":330,"title":{},"body":{"index.html":{}}}],["built",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["catagoriesservice",{"_index":57,"title":{"injectables/CatagoriesService.html":{}},"body":{"injectables/CatagoriesService.html":{},"coverage.html":{}}}],["catch",{"_index":194,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":198,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories",{"_index":98,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categoriescontroller",{"_index":95,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/categoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":27,"title":{"modules/categoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/categoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["category",{"_index":59,"title":{"entities/Category.html":{}},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"controllers/ProductsController.html":{},"modules/categoriesModule.html":{},"coverage.html":{}}}],["category_name",{"_index":155,"title":{},"body":{"entities/Category.html":{}}}],["categorydto",{"_index":78,"title":{"classes/CategoryDTO.html":{}},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDTO.html":{},"coverage.html":{}}}],["categoryname",{"_index":146,"title":{},"body":{"entities/Category.html":{},"classes/CategoryDTO.html":{}}}],["categoryrepo",{"_index":76,"title":{},"body":{"injectables/CatagoriesService.html":{}}}],["class",{"_index":43,"title":{"classes/CategoryDTO.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"classes/ProductDTO.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"classes/CategoryDTO.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"classes/ProductDTO.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":252,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":253,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["code",{"_index":186,"title":{},"body":{"interfaces/ErrnoException.html":{}}}],["column({default",{"_index":226,"title":{},"body":{"entities/Product.html":{}}}],["column({name",{"_index":151,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["column({nullable",{"_index":220,"title":{},"body":{"entities/Product.html":{}}}],["condtructor",{"_index":70,"title":{},"body":{"injectables/CatagoriesService.html":{}}}],["constructor",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"classes/NotNullException.html":{},"injectables/ProductsService.html":{}}}],["constructor(categoryrepo",{"_index":67,"title":{},"body":{"injectables/CatagoriesService.html":{}}}],["constructor(message",{"_index":209,"title":{},"body":{"classes/NotNullException.html":{}}}],["constructor(productsrepo",{"_index":262,"title":{},"body":{"injectables/ProductsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"modules/categoriesModule.html":{},"overview.html":{}}}],["coverage",{"_index":269,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":79,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createcategory",{"_index":105,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["createcategory(categorydto",{"_index":107,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["created",{"_index":120,"title":{},"body":{"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{}}}],["createdatecolumn",{"_index":161,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["createddate",{"_index":147,"title":{},"body":{"entities/Category.html":{}}}],["createdon",{"_index":214,"title":{},"body":{"entities/Product.html":{}}}],["createproduct",{"_index":241,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createproduct(productdto",{"_index":246,"title":{},"body":{"controllers/ProductsController.html":{}}}],["creted",{"_index":230,"title":{},"body":{"classes/ProductDTO.html":{}}}],["custroter",{"_index":210,"title":{},"body":{"classes/NotNullException.html":{}}}],["data",{"_index":132,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["database",{"_index":94,"title":{},"body":{"injectables/CatagoriesService.html":{},"injectables/ProductsService.html":{}}}],["date",{"_index":160,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["db",{"_index":88,"title":{},"body":{"injectables/CatagoriesService.html":{},"injectables/ProductsService.html":{}}}],["decorator",{"_index":41,"title":{},"body":{"injectables/AppService.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{}}}],["default",{"_index":166,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["delete",{"_index":85,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["delete(':id",{"_index":124,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["deletecategory",{"_index":63,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{}}}],["deletecategory(id",{"_index":83,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{}}}],["deleted",{"_index":121,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["deletedatecolumn",{"_index":162,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["deleteddate",{"_index":148,"title":{},"body":{"entities/Category.html":{}}}],["deleteproduct",{"_index":242,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(id",{"_index":247,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dependencies",{"_index":22,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["description",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/categoriesModule.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":341,"title":{},"body":{"index.html":{}}}],["di",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":351,"title":{},"body":{"index.html":{}}}],["effected",{"_index":125,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["efficient",{"_index":331,"title":{},"body":{"index.html":{}}}],["emport",{"_index":201,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["empty'})@isstring",{"_index":170,"title":{},"body":{"classes/CategoryDTO.html":{}}}],["entities",{"_index":142,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{},"overview.html":{}}}],["entity",{"_index":141,"title":{"entities/Category.html":{},"entities/Product.html":{}},"body":{"entities/Category.html":{},"classes/CategoryDTO.html":{},"entities/Product.html":{},"coverage.html":{}}}],["errno",{"_index":187,"title":{},"body":{"interfaces/ErrnoException.html":{}}}],["errnoexception",{"_index":181,"title":{"interfaces/ErrnoException.html":{}},"body":{"interfaces/ErrnoException.html":{},"coverage.html":{}}}],["error",{"_index":185,"title":{},"body":{"interfaces/ErrnoException.html":{}}}],["error.try",{"_index":114,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["exception",{"_index":202,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":197,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["export",{"_index":256,"title":{},"body":{"modules/ProductsModule.html":{}}}],["express",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":184,"title":{},"body":{"interfaces/ErrnoException.html":{},"classes/NotNullException.html":{}}}],["false",{"_index":159,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["fetch",{"_index":91,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["fetchallcategories",{"_index":64,"title":{},"body":{"injectables/CatagoriesService.html":{}}}],["fetchallroduct",{"_index":259,"title":{},"body":{"injectables/ProductsService.html":{}}}],["fetched",{"_index":128,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["file",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"interfaces/ErrnoException.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/categoriesModule.html":{},"coverage.html":{}}}],["filter",{"_index":208,"title":{},"body":{"classes/NotNullException.html":{}}}],["found",{"_index":133,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["found'})@apiinternalservererrorresponse({status",{"_index":123,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["found'})@get",{"_index":137,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["found'})@usefilters(new",{"_index":249,"title":{},"body":{"controllers/ProductsController.html":{}}}],["framework",{"_index":329,"title":{},"body":{"index.html":{}}}],["function",{"_index":282,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":321,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getbycategoryid",{"_index":65,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{}}}],["getbycategoryid(id",{"_index":90,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{}}}],["getbyproductid",{"_index":243,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getbyproductid(id",{"_index":248,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getbyroductid",{"_index":260,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getbyroductid(id",{"_index":265,"title":{},"body":{"injectables/ProductsService.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":325,"title":{"index.html":{}},"body":{}}],["given",{"_index":134,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["graph",{"_index":384,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":359,"title":{},"body":{"index.html":{}}}],["here",{"_index":370,"title":{},"body":{"index.html":{}}}],["host",{"_index":199,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["http",{"_index":101,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["httpexception",{"_index":195,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{}}}],["httpexceptionfilter",{"_index":192,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpexceptionfilter())@get",{"_index":250,"title":{},"body":{"controllers/ProductsController.html":{}}}],["httpexceptionfilter())@get(':id",{"_index":136,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["https://nestjs.com",{"_index":377,"title":{},"body":{"index.html":{}}}],["id",{"_index":82,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["id'})@apiinternalservererrorresponse({status",{"_index":130,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["id'})@usefilters(new",{"_index":135,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["identifier",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":196,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["imported",{"_index":206,"title":{},"body":{"classes/NotNullException.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["inbound",{"_index":100,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"interfaces/ErrnoException.html":{},"classes/HttpExceptionFilter.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"interfaces/ErrnoException.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/categoriesModule.html":{}}}],["injectable",{"_index":38,"title":{"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"injectables/ProductsService.html":{}},"body":{"coverage.html":{}}}],["injectables",{"_index":39,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"injectables/ProductsService.html":{},"overview.html":{}}}],["injected",{"_index":45,"title":{},"body":{"injectables/AppService.html":{}}}],["injection",{"_index":50,"title":{},"body":{"injectables/AppService.html":{}}}],["installation",{"_index":338,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":340,"title":{},"body":{"index.html":{}}}],["integer",{"_index":234,"title":{},"body":{"classes/ProductDTO.html":{}}}],["interface",{"_index":180,"title":{"interfaces/ErrnoException.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":182,"title":{},"body":{"interfaces/ErrnoException.html":{}}}],["internel",{"_index":112,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["isactive",{"_index":149,"title":{},"body":{"entities/Category.html":{}}}],["join",{"_index":366,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":374,"title":{},"body":{"index.html":{}}}],["later",{"_index":116,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["length",{"_index":150,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["license",{"_index":380,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":355,"title":{},"body":{"index.html":{}}}],["list",{"_index":89,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["listcategories",{"_index":106,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["listproduct",{"_index":244,"title":{},"body":{"controllers/ProductsController.html":{}}}],["main",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["marks",{"_index":42,"title":{},"body":{"injectables/AppService.html":{}}}],["matching",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"interfaces/ErrnoException.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/categoriesModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["message",{"_index":175,"title":{},"body":{"classes/CategoryDTO.html":{},"interfaces/ErrnoException.html":{},"classes/NotNullException.html":{},"classes/ProductDTO.html":{}}}],["metadata",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"modules/ProductsModule.html":{}}}],["methods",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["min(100)@max(1999)@column({default",{"_index":221,"title":{},"body":{"entities/Product.html":{}}}],["miscellaneous",{"_index":320,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":354,"title":{},"body":{"index.html":{}}}],["mode",{"_index":344,"title":{},"body":{"index.html":{}}}],["module",{"_index":19,"title":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/categoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/categoriesModule.html":{}}}],["modules",{"_index":21,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/categoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":369,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":375,"title":{},"body":{"index.html":{}}}],["name",{"_index":73,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDTO.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["nest",{"_index":335,"title":{},"body":{"index.html":{}}}],["nest's",{"_index":52,"title":{},"body":{"injectables/AppService.html":{}}}],["nestframework",{"_index":379,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":80,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["newly",{"_index":119,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["node.js",{"_index":328,"title":{},"body":{"index.html":{}}}],["notnullexception",{"_index":204,"title":{"classes/NotNullException.html":{}},"body":{"classes/NotNullException.html":{},"coverage.html":{}}}],["npm",{"_index":339,"title":{},"body":{"index.html":{}}}],["null",{"_index":207,"title":{},"body":{"classes/NotNullException.html":{}}}],["nullable",{"_index":153,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["number",{"_index":84,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"interfaces/ErrnoException.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["object",{"_index":229,"title":{},"body":{"classes/ProductDTO.html":{}}}],["open",{"_index":356,"title":{},"body":{"index.html":{}}}],["optional",{"_index":75,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"interfaces/ErrnoException.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["out",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["overview",{"_index":386,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":289,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameter",{"_index":49,"title":{},"body":{"injectables/AppService.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["path",{"_index":188,"title":{},"body":{"interfaces/ErrnoException.html":{}}}],["pg",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":367,"title":{},"body":{"index.html":{}}}],["poduct",{"_index":267,"title":{},"body":{"injectables/ProductsService.html":{}}}],["post",{"_index":117,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["prefix",{"_index":97,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["price",{"_index":215,"title":{},"body":{"entities/Product.html":{},"classes/ProductDTO.html":{}}}],["primary",{"_index":164,"title":{},"body":{"entities/Category.html":{}}}],["primarygeneratedcolumn",{"_index":163,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["produces",{"_index":103,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["product",{"_index":211,"title":{"entities/Product.html":{}},"body":{"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["product_name",{"_index":223,"title":{},"body":{"entities/Product.html":{}}}],["productadded_by",{"_index":219,"title":{},"body":{"entities/Product.html":{}}}],["productdto",{"_index":227,"title":{"classes/ProductDTO.html":{}},"body":{"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["production",{"_index":346,"title":{},"body":{"index.html":{}}}],["productname",{"_index":216,"title":{},"body":{"entities/Product.html":{},"classes/ProductDTO.html":{}}}],["products",{"_index":235,"title":{},"body":{"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["productscontroller",{"_index":239,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":26,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsrepo",{"_index":263,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productsservice",{"_index":254,"title":{"injectables/ProductsService.html":{}},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":327,"title":{},"body":{"index.html":{}}}],["project",{"_index":358,"title":{},"body":{"index.html":{}}}],["promise",{"_index":81,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["properties",{"_index":144,"title":{"properties.html":{}},"body":{"entities/Category.html":{},"classes/CategoryDTO.html":{},"interfaces/ErrnoException.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"properties.html":{}}}],["property",{"_index":237,"title":{},"body":{"classes/ProductDTO.html":{}}}],["provide",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ErrnoException.html":{}}}],["provided",{"_index":191,"title":{},"body":{"interfaces/ErrnoException.html":{}}}],["provider",{"_index":44,"title":{},"body":{"injectables/AppService.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ProductsModule.html":{}}}],["pruduct",{"_index":213,"title":{},"body":{"entities/Product.html":{}}}],["put(':id",{"_index":140,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["quanity",{"_index":217,"title":{},"body":{"entities/Product.html":{},"classes/ProductDTO.html":{}}}],["quantity",{"_index":238,"title":{},"body":{"classes/ProductDTO.html":{}}}],["read",{"_index":368,"title":{},"body":{"index.html":{}}}],["record",{"_index":138,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["reflect",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["repo",{"_index":69,"title":{},"body":{"injectables/CatagoriesService.html":{}}}],["repository",{"_index":68,"title":{},"body":{"injectables/CatagoriesService.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["requests",{"_index":102,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["required",{"_index":172,"title":{},"body":{"classes/CategoryDTO.html":{},"classes/ProductDTO.html":{}}}],["reset",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["responds",{"_index":99,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["responses",{"_index":104,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["results",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"interfaces/ErrnoException.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/categoriesModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["rimraf",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["rows",{"_index":126,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["run",{"_index":342,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["satrt",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scalable",{"_index":332,"title":{},"body":{"index.html":{}}}],["server",{"_index":113,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"index.html":{}}}],["service",{"_index":60,"title":{},"body":{"injectables/CatagoriesService.html":{},"injectables/ProductsService.html":{}}}],["side",{"_index":333,"title":{},"body":{"index.html":{}}}],["source",{"_index":357,"title":{},"body":{"index.html":{}}}],["specify",{"_index":118,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["sponsors",{"_index":361,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":40,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/catagories/catagories.service.ts",{"_index":58,"title":{},"body":{"injectables/CatagoriesService.html":{},"coverage.html":{}}}],["src/catagories/categories.controller.ts",{"_index":96,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/catagories/categories.module.ts",{"_index":268,"title":{},"body":{"modules/categoriesModule.html":{}}}],["src/catagories/category.entity.ts",{"_index":143,"title":{},"body":{"entities/Category.html":{},"coverage.html":{}}}],["src/catagories/dto/category.dto.ts",{"_index":168,"title":{},"body":{"classes/CategoryDTO.html":{},"coverage.html":{}}}],["src/common/error.code.ts",{"_index":183,"title":{},"body":{"interfaces/ErrnoException.html":{},"coverage.html":{}}}],["src/common/exception.filter.ts",{"_index":193,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/notnull.exception.ts",{"_index":205,"title":{},"body":{"classes/NotNullException.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":281,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/products/product.entity.ts",{"_index":212,"title":{},"body":{"entities/Product.html":{},"coverage.html":{}}}],["src/products/productdto/product.dto.ts",{"_index":228,"title":{},"body":{"classes/ProductDTO.html":{},"coverage.html":{}}}],["src/products/products.controller.ts",{"_index":240,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.module.ts",{"_index":255,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":257,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["stack",{"_index":189,"title":{},"body":{"interfaces/ErrnoException.html":{}}}],["start",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["start:dev",{"_index":345,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":347,"title":{},"body":{"index.html":{}}}],["started",{"_index":326,"title":{"index.html":{}},"body":{}}],["starter",{"_index":337,"title":{},"body":{"index.html":{}}}],["statements",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":371,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"interfaces/ErrnoException.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{}}}],["string'})@length(2",{"_index":236,"title":{},"body":{"classes/ProductDTO.html":{}}}],["sucessfully",{"_index":129,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["sucessfully'})@apiinternalservererrorresponse({status",{"_index":111,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["sucessfully'})@apinotfoundresponse({status",{"_index":122,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["support",{"_index":362,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":382,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["syscall",{"_index":190,"title":{},"body":{"interfaces/ErrnoException.html":{}}}],["system",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["t",{"_index":178,"title":{},"body":{"classes/CategoryDTO.html":{},"classes/ProductDTO.html":{}}}],["table",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":350,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":353,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":352,"title":{},"body":{"index.html":{}}}],["tests",{"_index":349,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":360,"title":{},"body":{"index.html":{}}}],["touch",{"_index":372,"title":{},"body":{"index.html":{}}}],["toys",{"_index":225,"title":{},"body":{"entities/Product.html":{}}}],["transformer",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":154,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["true})@isstring({message",{"_index":173,"title":{},"body":{"classes/CategoryDTO.html":{},"classes/ProductDTO.html":{}}}],["twitter",{"_index":378,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"entities/Category.html":{},"classes/CategoryDTO.html":{},"interfaces/ErrnoException.html":{},"classes/HttpExceptionFilter.html":{},"entities/Product.html":{},"classes/ProductDTO.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["typeorm",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":336,"title":{},"body":{"index.html":{}}}],["ui",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":109,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["unique",{"_index":157,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["unit",{"_index":348,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":87,"title":{},"body":{"injectables/CatagoriesService.html":{},"injectables/ProductsService.html":{}}}],["unlicensed",{"_index":391,"title":{},"body":{"properties.html":{}}}],["update",{"_index":93,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updatecategory",{"_index":66,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{}}}],["updatecategory(categorydto",{"_index":92,"title":{},"body":{"injectables/CatagoriesService.html":{},"controllers/CategoriesController.html":{}}}],["updated",{"_index":139,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["updatedon",{"_index":218,"title":{},"body":{"entities/Product.html":{}}}],["updateproduct",{"_index":245,"title":{},"body":{"controllers/ProductsController.html":{}}}],["updateproduct(productdto",{"_index":251,"title":{},"body":{"controllers/ProductsController.html":{}}}],["updateroduct",{"_index":261,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateroduct(productdto",{"_index":266,"title":{},"body":{"injectables/ProductsService.html":{}}}],["used",{"_index":71,"title":{},"body":{"injectables/CatagoriesService.html":{},"classes/CategoryDTO.html":{}}}],["using",{"_index":51,"title":{},"body":{"injectables/AppService.html":{}}}],["validator",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["varchar",{"_index":156,"title":{},"body":{"entities/Category.html":{},"entities/Product.html":{}}}],["version",{"_index":389,"title":{},"body":{"properties.html":{}}}],["via",{"_index":47,"title":{},"body":{"injectables/AppService.html":{}}}],["void",{"_index":203,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["watch",{"_index":343,"title":{},"body":{"index.html":{}}}],["website",{"_index":376,"title":{},"body":{"index.html":{}}}],["y",{"_index":167,"title":{},"body":{"entities/Category.html":{}}}],["you'd",{"_index":365,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                app controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n\n\n            \n                \n                    provide returns\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        get method\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\ncategoriesModule\n\ncategoriesModule\n\nAppModule -->\n\ncategoriesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            main module to start your application\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                        \n                            categoriesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Decorator that marks a class as a provider. Providers can be injected into other classes via constructor parameter injection using Nest's built-in Dependency Injection (DI) system.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n\n\n            \n                \n                    to get method\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        get method\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatagoriesService.html":{"url":"injectables/CatagoriesService.html","title":"injectable - CatagoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatagoriesService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/catagories/catagories.service.ts\n        \n\n\n            \n                Description\n            \n            \n                category service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCategory\n                            \n                            \n                                    Async\n                                deleteCategory\n                            \n                            \n                                    Async\n                                fetchAllCategories\n                            \n                            \n                                    Async\n                                getbyCategoryid\n                            \n                            \n                                    Async\n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryRepo: Repository)\n                    \n                \n\n                \n                    \n                            category repo\ncondtructor used\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCategory(categoryDTO: CategoryDTO)\n                \n            \n\n\n\n\n            \n                \n                    create new category\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    categoryDTO\n                                    \n                                                CategoryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        create new category\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        category id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCategory(id: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        delete category based on id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fetchAllCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAllCategories()\n                \n            \n\n\n\n\n            \n                \n                    get category from db\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        list of category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getbyCategoryid\n                        \n                    \n                \n            \n            \n                \n                    \n                    getbyCategoryid(id: number)\n                \n            \n\n\n\n\n            \n                \n                    fetch category based on id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        category id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCategory(categoryDTO: CategoryDTO, id: number)\n                \n            \n\n\n\n\n            \n                \n                    update category based on id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    categoryDTO\n                                    \n                                                CategoryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        database\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        category id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        category\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/catagories/Categories.Controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n            \n                Description\n            \n            \n                Controller responds to inbound HTTP Requests and produces HTTP Responses.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                Createcategory\n                            \n                            \n                                deletecategory\n                            \n                            \n                                    Async\n                                getbyCategoryid\n                            \n                            \n                                    Async\n                                listCategories\n                            \n                            \n                                updatecategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Createcategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    Createcategory(CategoryDTO: CategoryDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Category Added Sucessfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'This is a internel server error.try again later '})@Post()\n                \n            \n\n\n\n            \n                \n                    create new category\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    CategoryDTO\n                                    \n                                                CategoryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        specify category name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        newly created category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletecategory\n                        \n                    \n                \n            \n            \n                \ndeletecategory(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Deleted Sucessfully'})@ApiNotFoundResponse({status: undefined, description: 'Category Not Found'})@ApiInternalServerErrorResponse({status: undefined, description: 'This is a internel server error.try again later '})@Delete(':id')\n                \n            \n\n\n\n            \n                \n                    delete category based on id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        category id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        no of effected rows\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getbyCategoryid\n                        \n                    \n                \n            \n            \n                \n                    \n                    getbyCategoryid(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({status: undefined, description: 'Category Fetched Sucessfully for id'})@ApiInternalServerErrorResponse({status: undefined, description: 'This is a internel server error.try again later '})@ApiNotFoundResponse({status: undefined, description: 'no Data found for given id'})@UseFilters(new HttpExceptionFilter())@Get(':id')\n                \n            \n\n\n\n            \n                \n                    list category based on id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        category id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    listCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Category Fetched Sucessfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'This is a internel server error.try again later '})@ApiNotFoundResponse({status: undefined, description: 'no Data found'})@Get()\n                \n            \n\n\n\n            \n                \n                    for fetch all record from categories\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        list of category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatecategory\n                        \n                    \n                \n            \n            \n                \nupdatecategory(CategoryDTO: CategoryDTO, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Updated Sucessfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'This is a internel server error.try again later '})@Put(':id')\n                \n            \n\n\n\n            \n                \n                    update category based on category\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    CategoryDTO\n                                    \n                                                CategoryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        update\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        category id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        updated\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Category.html":{"url":"entities/Category.html","title":"entity - Category","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Category\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/catagories/category.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                entity created for category\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addedBy\n                            \n                            \n                                categoryName\n                            \n                            \n                                createdDate\n                            \n                            \n                                deletedDate\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                length\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'added_by', nullable: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'category_name', type: 'varchar', unique: true, length: 20, nullable: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    primary created for category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'isActive', type: 'varchar', length: 1, default: 'y'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    length created for category\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDTO.html":{"url":"classes/CategoryDTO.html","title":"class - CategoryDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/catagories/dto/category.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                entity created\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addedBy\n                            \n                            \n                                categoryName\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'added by should not empty'})@IsString()\n                        \n                    \n                \n\n            \n                \n                    added by used\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'category name description', required: true})@IsString({message: 'category should be string number not acceptable'})@Length(2, 20, {message: 'category should be beetween 2 t 20'})\n                        \n                    \n                \n\n            \n                \n                    apiproperty used\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    apiproperty used\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrnoException.html":{"url":"interfaces/ErrnoException.html","title":"interface - ErrnoException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrnoException\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/error.code.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errno\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stack\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            syscall\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Provided string to the error message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errno\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errno:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Provide number string to the error message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Provided string to the path message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stack:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Provided stack string message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        syscall\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        syscall:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Provided string to the syscall message\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exception.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                catch httpexception\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n\n\n            \n                \n                    emport catch httpexception  host\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotNullException.html":{"url":"classes/NotNullException.html","title":"class - NotNullException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotNullException\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/notnull.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                imported not null filter\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message)\n                    \n                \n\n                \n                    \n                            imported not null filter custroter\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Product.html":{"url":"entities/Product.html","title":"entity - Product","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Product\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                entity pruduct\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addedBy\n                            \n                            \n                                createdOn\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                price\n                            \n                            \n                                productName\n                            \n                            \n                                quanity\n                            \n                            \n                                updatedOn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'Productadded_by', nullable: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, default: 'Description'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(100)@Max(1999)@Column({default: 100})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'Product_name', type: 'varchar', unique: true, length: 10, default: 'toys'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quanity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: '1'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n\n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDTO.html":{"url":"classes/ProductDTO.html","title":"class - ProductDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/Productdto/Product.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                product object creted\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addedBy\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                price\n                            \n                            \n                                productName\n                            \n                            \n                                quanity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n\n            \n                \n                    string object created\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n\n            \n                \n                    for description\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Api object creted\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsInt()\n                        \n                    \n                \n\n            \n                \n                    price number should be integer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Product name description', required: true})@IsString({message: 'Products must be string'})@Length(2, 20, {message: 'Products should be beetween 2 t 20'})\n                        \n                    \n                \n\n            \n                \n                    Api property creted\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quanity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsInt()\n                        \n                    \n                \n\n            \n                \n                    quantity should be integer\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n            \n                Description\n            \n            \n                Product Controller responds to inbound HTTP Requests and produces HTTP Responses.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                    Async\n                                getbyProductid\n                            \n                            \n                                    Async\n                                listProduct\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(ProductDTO: ProductDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Products Added Sucessfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'This is a internel server error.try again later '})@Post()\n                \n            \n\n\n\n            \n                \n                    create new Products\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ProductDTO\n                                    \n                                                ProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        specify Products name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        newly created Products\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Deleted Sucessfully'})@ApiNotFoundResponse({status: undefined, description: 'Products Not Found'})@ApiInternalServerErrorResponse({status: undefined, description: 'This is a internel server error.try again later '})@Delete(':id')\n                \n            \n\n\n\n            \n                \n                    delete Products based on id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Products id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        no of effected rows\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getbyProductid\n                        \n                    \n                \n            \n            \n                \n                    \n                    getbyProductid(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({status: undefined, description: 'Products Fetched Sucessfully for id'})@ApiInternalServerErrorResponse({status: undefined, description: 'This is a internel server error.try again later '})@ApiNotFoundResponse({status: undefined, description: 'no Data found for given id'})@UseFilters(new HttpExceptionFilter())@Get(':id')\n                \n            \n\n\n\n            \n                \n                    list Products based on id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Products id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Products\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    listProduct()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Product Fetched Sucessfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'This is a internel server error.try again later '})@ApiNotFoundResponse({status: undefined, description: 'no Data found'})@UseFilters(new HttpExceptionFilter())@Get()\n                \n            \n\n\n\n            \n                \n                    for fetch all record from Products\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        list of Products\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(ProductDTO: ProductDTO, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Updated Sucessfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'This is a internel server error.try again later '})@Put(':id')\n                \n            \n\n\n\n            \n                \n                    update Products based on category\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ProductDTO\n                                    \n                                                ProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        update\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Products id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        updated\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductsService\n\nProductsService\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            method to export modules\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Products service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addroduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                fetchAllroduct\n                            \n                            \n                                    Async\n                                getbyroductid\n                            \n                            \n                                    Async\n                                updateroduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ProductsRepo: Repository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ProductsRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addroduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    addroduct(ProductDTO: ProductDTO)\n                \n            \n\n\n\n\n            \n                \n                    create new Products\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ProductDTO\n                                    \n                                                ProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        create new Products\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Products id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        delete Products based on id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Products\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fetchAllroduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAllroduct()\n                \n            \n\n\n\n\n            \n                \n                    get Products from db\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        list of Products\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getbyroductid\n                        \n                    \n                \n            \n            \n                \n                    \n                    getbyroductid(id: number)\n                \n            \n\n\n\n\n            \n                \n                    fetch Products based on id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Products id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Products\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateroduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateroduct(ProductDTO: ProductDTO, id: number)\n                \n            \n\n\n\n\n            \n                \n                    update product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ProductDTO\n                                    \n                                                ProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        product id database\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        poduct is returns\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/categoriesModule.html":{"url":"modules/categoriesModule.html","title":"module - categoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    categoriesModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/catagories/categories.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            category module\n\n        \n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/catagories/Categories.Controller.ts\n            \n            controller\n            CategoriesController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/catagories/catagories.service.ts\n            \n            injectable\n            CatagoriesService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/catagories/category.entity.ts\n            \n            entity\n            Category\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/catagories/dto/category.dto.ts\n            \n            class\n            CategoryDTO\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/error.code.ts\n            \n            interface\n            ErrnoException\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/common/exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/common/notnull.exception.ts\n            \n            class\n            NotNullException\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/Productdto/Product.dto.ts\n            \n            class\n            ProductDTO\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/products/product.entity.ts\n            \n            entity\n            Product\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                71 %\n                (5/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^0.1.0\n        \n            @nestjs/common : ^9.0.11\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            pg : ^8.8.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.5.0\n        \n            typeorm : ^0.3.7\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    bootstarp function to satrt application\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        categoriesModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\ncategoriesModule\n\ncategoriesModule\n\nAppModule -->\n\ncategoriesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
